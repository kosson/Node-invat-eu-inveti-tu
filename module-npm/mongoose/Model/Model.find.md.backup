# Model.find()

Metoda este folosită pentru a căuta documente în MongoDB. Returnează un obiect de tip `Query`.

Metoda primește câțiva posibili parametri, primul fiind filtrul după care se face căutare, iar restul sunt opționali.

## Parametri

### `filter`

Este un `Object` sau un `ObjectId`.

Aceste obiecte cu rol de filtru sunt formatate conform `SchemaType`-ului corespondent înainte de a fi trimisă comanda către bază.

### `[projection]`

Proiecția poate fi un șir de caractere (`String`) sau un `Object`. Această proiecție este folosită pentru a specifica câmpurile care să fie aduse din bază. Vezi și [`Query.prototype.select()`](https://mongoosejs.com/docs/api.html#query_Query-select).

### `[options]`

Este un `Object` opțional - vezi [`Query.prototype.setOptions()`](https://mongoosejs.com/docs/api.html#query_Query-setOptions)

Opțiunile posibile sunt:

`tailable`
`sort` - https://mongoosejs.com/docs/api/query.html#query_Query-sort
`limit`
`skip`
`allowDiskUse`
`batchSize`
`readPreference`
`hint`
`comment`
`snapshot`
`maxscan`

### `[callback]`

Este o funcție cu rol de callback în cazul în care este aleasă această opțiune.

## Exemplu

```javascript
// are numele john și are cel puțin 18 ani
MyModel.find({ name: 'john', age: { $gte: 18 }});

// se execută și pasează rezultatele în callback
MyModel.find({ name: 'john', age: { $gte: 18 }}, function (err, docs) {});

// caută un nume asemănător (LIKE) cu john, selectând doar câmpurile "name" și "friends"
MyModel.find({ name: /john/i }, 'name friends', function (err, docs) { })

// pasarea opțiunilor folosind un obiect
MyModel.find({ name: /john/i }, null, { skip: 10 })

// pasarea opțiunilor folosind un obiect și executarea callback-ului
MyModel.find({ name: /john/i }, null, { skip: 10 }, function (err, docs) {});

// Executarea unui query explicit
var query = MyModel.find({ name: /john/i }, null, { skip: 10 })
query.exec(function (err, docs) {});

// poți folosi promisiunea care a fost returnată din executarea unui query
var query = MyModel.find({ name: /john/i }, null, { skip: 10 });
var promise = query.exec();
promise.addBack(function (err, docs) {});
```

## Referințe

- [Model.find()](https://mongoosejs.com/docs/api/model.html#model_Model.find)
- [Query Casting](https://mongoosejs.com/docs/tutorials/query_casting.html)
- [How find() Works in Mongoose](http://thecodebarbarian.com/how-find-works-in-mongoose.html)
